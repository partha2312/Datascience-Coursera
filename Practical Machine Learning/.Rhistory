y <- 10
f <- function(x){
y <- 2
x^2 + g(x)
}
g <- function(x){
x*y
}
f(3)
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd(--"192012")
ymd(//"192012")
ymd("//192012")
ymd("//1920/1/2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
hms(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours=22, minutes=19)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc+days(2)
depart
depart <- update(depart, hour=hour+17, minute=minute+34)
depart <- update(depart, hour=17, minute=34)
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart+hours(15)+minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(arrive, last_time)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
quit
quit
exit
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "getdata_dataset.zip"
folder <- "UCI HAR Dataset"
if(!file.exists(zipFolder)){
quit("yes")
}else{
print("Hi")
}
swirl()
library(swirl)
swirl()
dice_sqr
ex2_fair <- dice_fair*PDF
ex2_fair <- dice_fair
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair - (3.5)*(3.5)
ex2_fair-3.5^2
ex2_fair-3.5^2
sum(dice_high * dice_sqr)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
.24
.25
.94208
pbinom(2,size=5,prob=.8,lower.tail=FALSE)
qnorm(.1)
0
qnorm(.975,mean=3,sd=2)
1.96*2 + 3
pnorm(1200,mean=1020,sd=50,lower.tail=FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(.75,mean=1020,sd=50)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
ppois(3,2.5 * 4)
pbinom(5,1000,.01)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
95
qnorm(.95)
qnorm(.95)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)$conf.int
binom.test(60,100)$conf.int
mywald(.2)
mywald(.2)
ACCompar(20)
lamb
ACCompar(20)
lamb <- 5/94.32
mean + c(-1,1)*qnorm(.975)*sqrt(est var)
lamb <- 5/94.32
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
poisson.test(5,94.32)$conf
myplot(2)
1
myplot(20)
myplot2(2)
myplot2(2)
qt(.975,2)
myplot2(20)
myplot2(20)
sleep
sleep
range(g1)
range(g1)
range(g2)
range(g2)
difference <- g2-g1
d
difference <- g2-g1
mean(difference)
mean(difference)
s <- sd(difference)
s <- sd(difference)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)$conf.int
t.test(difference)$conf.int
sp <- 7*15.34^2 + 20*18.23^2
1
sp <- 7*15.34^2 + 20*18.23^2
ns <- sp
ns <- 8+21-2
sp <- sqrt(sp/ns)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
1
0/sqrt(100)=1
1
2
13
(32-30)/(10/4)
1
15
1
qt(.95,15)
dim(fs)
t.test
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
1
mybin[7]=.144
mybin[7]=.144 and mybin[8]=.035
8
H_a
1
pt(2.5, 15, lower.tail=FALSE)
1
qnorm(.95)
qnorm(.99)
1
pnorm
pnorm(@)
pnorm(2)
2
pnorm(2,lower.tail=FALSE)
pnorm(2,lower.tail=FALSE)
mybin
mybin
pbinom(6,size=8,prob=.5,lower.tail=FALSE)
pbinom(6,size=8,prob=.5,lower.tail=FALSE)
pbinom(7,size=8,prob=.5,lower.tail=TRUE)
pbinom(7,size=8,prob=.5,lower.tail=TRUE)
ppois(9,5,lower.tail=FALSE)
dev.off()
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline,lwd=3, col='red')
summary(regrline)
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
summary(fit)
fit$residuals
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic
ols.ic <- 4
ols.ic <- fit$coef[1]
fit$coef[2]
ols.slope <- fit$coef[2]
rhs-lhs
lhs-rhs
all.equal(lhs,rhs)
all.equal(lhs,rhs)
varChild <- var(galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varRes, varEst)
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(0)
mean(efit$residuals)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cov(efit$residuals, attenu$dist)
cor(gpa_nor,gch_nor)
cor(gpa_nor,gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
mu <- mean(galton$child)
sTot <- sum((galton$child-mu)^2)
sTot <- sum((galton$child-mu)^2)
sRes <- deviance(fit)
R^2
R^2
sRes <- deviance(fit)
1-sRes/sTot
1-sRes/sTot
summary(fit)$r.squared
summary(fit)$r.squared
cor(galton$parent,galton$child)^2
cor(galton$parent,galton$child)^2
ones <- rep(1, nrow(galton))
ones <- rep(1, nrow(galton))
swirl()
cor(galton$parent,galton$child)^2
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent -1, galton)
lm(child ~ 1, galton)
lm(child ~ 1, galton)
head(trees)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor()
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
makelms()
ec <- swiss$Examination+swiss$Catholic
ec <- swiss$Examination+swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
ec <- swiss$Examination+swiss$Catholic
all$coefficients-efit$coefficients
6
all$coefficients-efit$coefficients
dim(InsectSprays)
dim(InsectSprays)
head(InsectSprays,15)
head(InsectSprays,15)
sB
sB
summary(InsectSprays[,2])
summary(InsectSprays[,2])
sapply(InsectSprays,class)
sapply(InsectSprays,class)
fit <- lm(count ~ spray, InsectSprays)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)$coef
summary(fit)$coef
est <- summary(fit)$coef[,1]
est <- summary(fit)$coef[,1]
mean(sA)
mean(sA)
mean(sB)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")"
spray2 <- relevel(InsectSprays$spray,C)
spray2 <- relevel(InsectSprays$spray,\"C\")"
"spray2 <- relevel(InsectSprays$spray,\"C\")"
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C")
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count ~ spray2, InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
summary(fit2)$coef
mean(sC)
mean(sC)
(fit$coef[2]-fit$coef[3])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
summary(fit)$coef
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex)
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex)
summary(lmBoth)
summary(lmBoth)
lmInter <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex + hunger$Year * hunger$Sex)
summary(lmInter)
swirl()
swirl()
summary(lmInter)
fit <- lm(y ~ x, out2)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1, ])
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which=1)
plot(fitno, which=1)
coef(fit)-coef(fitno)
coef(fit)-coef(fitno)
head(dfbeta(fit)) or View(dfbeta(fit))
head(dfbeta(fit))
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
1-resid(fit)[1]/resno
head(hatvalues(fit))
head(hatvalues(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
View(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=3)
plot(fit, which=2)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
head(rstudent(fit))
dy <- predict(fitno, out2)-predict(fit, out2)
dy <- predict(fitno, out2)-predict(fit, out2)
sum(dy^2)/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
names(mtcars)
?mtcars
install.packages("rattle", dependencies = T)
setwd("~/Documents/Git/datasciencecoursera/Practical Machine Learning")
install.packages("Gtk2")
install.packages("rattle")
library(caret)
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(randomForest)
library(knitr)
library(caret)
library(caret)
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(randomForest)
library(knitr)
library(randomForest)
install.packages("doMC")
install.packages("gbm")
