#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
averages_data <- ddply(data, .(subject, activity), function(x) colMeans(x[, 1:79]))
library(plyr)
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
averages_data <- ddply(data, .(subject, activity), function(x) colMeans(x[, 1:79]))
library(dplyr)
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
averages_data <- ddply(data, .(subject, activity), function(x) colMeans(x[, 1:79]))
library(dplyr);
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
averages_data <- ddply(data, .(subject, activity), function(x) colMeans(x[, 1:79]))
library(dplyr)
library(dplyr);
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
averages_data <- ddply(data, .(subject, activity), function(x) colMeans(x[, 1:79]))
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
library(plyr)
library(dplyr)
averages_data <- ddply(data, .(subject, activity), function(x) colMeans(x[, 1:79]))
library(plyr)
install.packages(plyr)
install.packages(pkgs="plyr")
library(plyr)
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
library(plyr)
averages_data <- ddply(data, .(subject, activity), function(x) colMeans(x[, 1:79]))
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
library(plyr)
averages_data <- ddply(data, .(Subject, Activity), function(x) colMeans(x[, 1:79]))
head(averages_data)
ncol(averages_data)
colnames(averages_data)
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
library(plyr)
averages_data <- ddply(data, .(Subject, Activity), function(x) colMeans(x[, 3:79]))
head(averages_data)
ncol(averages_data)
ncol(data)
library(plyr)
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
colnames(data) = c("Subject", "Activity", featureNames)
averages_data <- ddply(data, .(Subject, Activity), function(x) colMeans(x[, 3:79]))
write.table(averages_data, "tidydataset.txt", row.name=FALSE)
library(plyr)
#Constants to store data URL, zip and the folder
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
zipFolder <- "dataset.zip"
folder <- "UCI HAR Dataset"
activityLabelsFile <- paste(folder,"activity_labels.txt", sep = "/")
activityFeaturesFile <- paste(folder, "features.txt", sep = "/")
trainingDataFolder <- paste(folder, "train", sep = "/")
testingDataFolder <- paste(folder, "test", sep = "/")
#Check if data folder exists. If not download the zip folder from URL.
#Unzip to get the actual folder. Delete the zip folder.
if(!file.exists(folder)){
download.file(fileURL, zipFolder, method="curl")
if(!file.exists(zipFolder)){
print("Error Downloading Data.")
}
unzip(zipfile = zipFolder)
unlink(zipFolder)
}
if(!file.exists(trainingDataFolder) || !file.exists(testingDataFolder)){
print("Error Downloading Data.")
}
#Read activity and feature table
dfActivity <- read.table(activityLabelsFile)
dfActivity[,2] <- as.character(dfActivity[,2])
dfFeatures <- read.table(activityFeaturesFile)
dfFeatures[,2] <- as.character(dfFeatures[,2])
#Extract the column names which has mean or std in them.
featureIdx <- grep(".*mean*.|.*std*.", dfFeatures[,2])
featureNames <- dfFeatures[featureIdx, 2]
featureNames <- gsub('[-()]', '', featureNames)
featureNames <- gsub('mean', 'Mean', featureNames)
featureNames <- gsub('std', 'Std', featureNames)
featureNames <- gsub('^t', 'Time', featureNames)
featureNames <- gsub('^f', 'Frequency', featureNames)
featureNames <- gsub('BodyBody', 'Body', featureNames)
trainingData <- read.table(paste(trainingDataFolder, "X_train.txt", sep = "/"))[featureIdx]
trainActivitiesData <- read.table(paste(trainingDataFolder, "Y_train.txt", sep = "/"))
trainSubjectsData <- read.table(paste(trainingDataFolder, "subject_train.txt", sep="/"))
trainingDataComplete <- cbind(trainSubjectsData, trainActivitiesData, trainingData)
testingData <- read.table(paste(testingDataFolder, "X_test.txt", sep = "/"))[featureIdx]
testActivitiesData <- read.table(paste(testingDataFolder, "Y_test.txt", sep = "/"))
testSubjectsData <- read.table(paste(testingDataFolder, "subject_test.txt", sep = "/"))
testingDataComplete <- cbind(testSubjectsData, testActivitiesData, testingData)
data<-rbind(trainingDataComplete, testingDataComplete)
data[,2] <- dfActivity[data[,2], 2]
colnames(data) = c("Subject", "Activity", featureNames)
averages_data <- ddply(data, .(Subject, Activity), function(x) colMeans(x[, 3:79]))
write.table(averages_data, "tidydataset.txt", row.name=FALSE)
head(data)
tail(data)
head(averages_data)
colnames(averages_data)
as.list(colnames(averages_data))
as.data.frame(averages_data)
as.data.frame(colnames(averages_data))
